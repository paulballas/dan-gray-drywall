doctype html(lang='en')

head
    title prismic.io help page
    link(rel="stylesheet", href="/stylesheets/reset.css")
    link(rel="stylesheet", href="/stylesheets/style.css")
    link(rel="stylesheet", href="/stylesheets/vendors/help.min.css")
    link(href="https://fonts.googleapis.com/css?family=Lato:300,400,700,900", rel="stylesheet", type="text/css")
    meta(name="viewport", content="width=device-width, initial-scale=1")
    script(src="https://code.jquery.com/jquery-1.12.4.min.js")
    script(src="/javascript/vendors/highlight.min.js")

body
  div#prismic-help

    header
      nav
        if isConfigured
          a(href=repoURL target="_blank")
            strong Go to #{name}
        else
          a(href="#config")
            strong Configure a repository
        a.doc(href="https://prismic.io/docs") Documentation
          img(src="images/open.svg" alt="")
      .wrapper
        img(src="images/rocket.svg" alt="")
        h1 High five, you deserve it!
        p Grab a well deserved cup of coffee, you're two steps away from creating a page with dynamic content.
      .hero-curve
      .flip-flap
        .flipper
          .guide
            ul
              li.done
                span 1
                |Bootstrap your project
              li
                a(href="#query")
                  span 2
                  |Create a route and retrieve content
                  img(src="images/arrow.svg" alt="")
              li
                a(href="#done")
                  span 3
                  |Fill a template
                  img(src="images/arrow.svg" alt="")
          .gif



    section
      p This is a help page included in your project, it has a few useful links and example snippets to help you getting started. You can access this any time by pointing your browser to #{host}/help.

      - var stepNumberText = isConfigured ? 'Two' : 'Three'
      h2 #{stepNumberText} more steps:

      if !isConfigured
        h3#config
          span 1
          |Bootstrap your project

        p If you haven't yet, create a prismic.io content repository. A repository is where your website’s content will live. Simply #[a(href="https://prismic.io/#create" target="_blank") create one] by choosing a repository name and a plan. We’ve got a variety of plans including our favorite, Free!

        h4 Add the repository URL to your configuration

        p Replace the repository url in your config file with your-repo-name.prismic.io

        .source-code
          pre
            code
              |// In prismic-configuration.js
              |apiEndpoint: "http://your-repo-name.prismic.io/api",


      h3#query
        span 2
        |Create a route and retrieve content

      p
        h4 You need to publish your content first !
        |To add a page to your project, you need to first specify a route. The route contains the URL and performs queries for the needed content.
        br
        |In the following example we set a <code class="tag">/page/:uid</code> URL to fetch content of your custom type by its UID. The route then calls the <code class="tag">page</code> template and passes it the retrieved content.

      .source-code
        pre
          code
            // Using NodeJS
            |// add a new route in ./app.js
            |app.get('/page/:uid', function(req, res) {
            |        // We store the param uid in a variable
            |        var uid = req.params.uid;
            |        api(req, res).then(function(api) {
            |               // We are using the function to get a document by its uid
            |                return api.getByUID('#{'<your-custom-type-id>'}', uid);
            |        }).then(function(pageContent) {
            |                // pageContent is a document, or null if there is no match
            |                res.render('page', {
            |                // Where 'page' is the name of your pug template file (page.pug)
            |                        pageContent: pageContent
            |                });
            |        });
            |});
      p
        |To discover all the functions you can use to query your documents go to&nbsp;
        a(href="https://prismic.io/docs/custom-types#query?lang=javascript" target="_blank") the prismic documentation

      h3#done
        span 3
        |Fill a template
      p Now all that's left to be done is insert your content into the template.
        br
        |You can get the content using the <code class="tag">pageContent</code> object we defined above. Each content field is accessed using the custom type <code class="tag">API-ID</code> and the field key defined in the custom type (for example <code class="tag">page.image</code>).
      .source-code
        pre
          code
            |//- Create template views/page.pug
            |extends ./layout.pug
            | //- Create a block
            |block body
            |        div
            |                //- This is how to get an image into your template
            |                img(src=pageContent.getImage('#{'<Your-custom-type-id>.<Your-field-image-id>'}').url)
            |                //- This is how to get a structured text into your template
            |                !=pageContent.getStructuredText('#{'<your-custom-type-id>.<your-field-text-id>'}').asHtml(ctx.linkResolver)
            |                !=pageContent.getStructuredText('#{'<your-custom-type-id>.<your-field-text-id>'}').asHtml(ctx.linkResolver)

            br
        br
        p
          |To discover how to get all the field go to&nbsp;
          a(href="https://prismic.io/docs/fields/structuredtext#?lang=javascript" target="_blank") the prismic documentation
